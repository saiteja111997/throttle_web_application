{"ast":null,"code":"var _jsxFileName = \"/Users/saiteja-ch/Desktop/side_hustle_repos/throttle_frontend/src/Components/RegsiterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const {\n    login\n  } = useContext(AuthContext);\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Construct form data\n    const formData = new FormData();\n    formData.append('full_name', fullName);\n    formData.append('email', email);\n    formData.append('password', password);\n    try {\n      // Set loading state to true while waiting for response\n      setLoading(true);\n\n      // Make a POST request to your backend API\n      const response = await fetch('http://127.0.0.1:8080/auth/register', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Check if the request was successful\n      if (response.ok) {\n        // Reset form fields\n        setFullName('');\n        setEmail('');\n        setPassword('');\n        setRememberMe(false);\n\n        // Handle success response\n        console.log('Account created successfully!');\n        login();\n        navigate('/landing_page');\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.error || 'Something went wrong');\n      }\n    } catch (error) {\n      // Handle network errors\n      setError('Network error. Please try again later.');\n    } finally {\n      // Reset loading state\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter your full name\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicCheckbox\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Remember me\",\n        checked: rememberMe,\n        onChange: e => setRememberMe(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"loginButton\",\n      disabled: loading,\n      children: loading ? 'Creating Account...' : 'Create Account'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"3ZIBLffuRNlyA+nLnJf0Ni3NR9Q=\", true);\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useContext","Button","Form","jsxDEV","_jsxDEV","RegisterForm","_s","fullName","setFullName","email","setEmail","password","setPassword","rememberMe","setRememberMe","loading","setLoading","error","setError","navigate","useNavigate","login","AuthContext","handleSubmit","event","preventDefault","formData","FormData","append","response","fetch","method","body","ok","console","log","errorData","json","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","Text","Check","label","checked","variant","disabled","_c","$RefreshReg$"],"sources":["/Users/saiteja-ch/Desktop/side_hustle_repos/throttle_frontend/src/Components/RegsiterForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nfunction RegisterForm() {\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const { login } = useContext(AuthContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    // Construct form data\n    const formData = new FormData();\n    formData.append('full_name', fullName);\n    formData.append('email', email);\n    formData.append('password', password);\n  \n    try {\n      // Set loading state to true while waiting for response\n      setLoading(true);\n  \n      // Make a POST request to your backend API\n      const response = await fetch('http://127.0.0.1:8080/auth/register', {\n        method: 'POST',\n        body: formData,\n      });\n  \n      // Check if the request was successful\n      if (response.ok) {\n        // Reset form fields\n        setFullName('');\n        setEmail('');\n        setPassword('');\n        setRememberMe(false);\n  \n        // Handle success response\n        console.log('Account created successfully!');\n        login();\n        navigate('/landing_page');\n      } else {\n        // Handle error response\n        const errorData = await response.json();\n        setError(errorData.error || 'Something went wrong');\n      }\n    } catch (error) {\n      // Handle network errors\n      setError('Network error. Please try again later.');\n    } finally {\n      // Reset loading state\n      setLoading(false);\n    }\n  };\n  \n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Full Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter your full name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Remember me\" checked={rememberMe} onChange={(e) => setRememberMe(e.target.checked)} />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\" className='loginButton' disabled={loading}>\n        {loading ? 'Creating Account...' : 'Create Account'}\n      </Button>\n\n      {error && <p className=\"error-message\">{error}</p>}\n    </Form>\n  );\n}\n\nexport default RegisterForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}